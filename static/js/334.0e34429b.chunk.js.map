{"version":3,"file":"static/js/334.0e34429b.chunk.js","mappings":"0LAAYA,EAAU,SAAVA,GAAU,OAAVA,EAAU,gBAAVA,EAAU,gBAAVA,EAAU,cAAVA,CAAU,MActB,IARe,SAAHC,GAA8D,IAAxDC,EAAKD,EAALC,MAAOC,EAAIF,EAAJE,KACvB,OACEC,EAAAA,EAAAA,KAAA,UAAQC,UAAU,qDAAqDF,KAAMA,EAAKG,SAC/EJ,GAGP,C,uJCiCA,EAvCkB,WAChB,IAAAK,GAAwBC,EAAAA,EAAAA,UAAqB,CAAEC,MAAO,GAAIC,SAAU,KAAKC,GAAAC,EAAAA,EAAAA,GAAAL,EAAA,GAAlEM,EAAIF,EAAA,GAAEG,EAAOH,EAAA,GACdI,GAAWC,EAAAA,EAAAA,MAEXC,EAAc,SAACC,GACnB,IAAAjB,EAAwBiB,EAAEC,OAAlBC,EAAInB,EAAJmB,KAAMC,EAAKpB,EAALoB,MACdP,GAAQ,SAACQ,GACP,OAAAC,EAAAA,EAAAA,IAAAA,EAAAA,EAAAA,GAAA,GAAYD,GAAI,IAAAE,EAAAA,EAAAA,GAAA,GAAGJ,EAAOC,GAC5B,GACF,EAQA,OACEI,EAAAA,EAAAA,MAAA,QAAMpB,UAAU,sBAAsBqB,SAPvB,SAACR,GAChBA,EAAES,iBACFZ,GAASa,EAAAA,EAAAA,IAAef,IACxBC,EAAQ,CAAEL,MAAO,GAAIC,SAAU,IACjC,EAG2DJ,SAAA,EACvDmB,EAAAA,EAAAA,MAAA,SAAOpB,UAAU,gBAAeC,SAAA,CAAC,UAE/BF,EAAAA,EAAAA,KAAA,SAAOyB,SAAUZ,EAAaG,KAAK,QAAQjB,KAAK,QAAQkB,MAAOR,EAAKJ,YAEtEgB,EAAAA,EAAAA,MAAA,SAAOpB,UAAU,gBAAeC,SAAA,CAAC,aAE/BF,EAAAA,EAAAA,KAAA,SACEyB,SAAUZ,EACVG,KAAK,WACLjB,KAAK,WACL2B,UAAW,EACXC,UAAW,GACXV,MAAOR,EAAKH,eAGhBN,EAAAA,EAAAA,KAAC4B,EAAAA,EAAM,CAAC7B,KAAMH,EAAAA,EAAWiC,OAAQ/B,MAAM,UAAU,MAGvD,EC9BA,EAXkB,WAChB,OACEuB,EAAAA,EAAAA,MAAAS,EAAAA,SAAA,CAAA5B,SAAA,EACEF,EAAAA,EAAAA,KAAA,MAAAE,UACEF,EAAAA,EAAAA,KAAA,KAAAE,SAAG,aAELF,EAAAA,EAAAA,KAAC+B,EAAS,MAGhB,C","sources":["components/buttons/Button.tsx","components/forms/Login.tsx","pages/Login.tsx"],"sourcesContent":["export enum ButtonType {\n  Submit = 'submit',\n  Button = 'button',\n  Reset = 'reset',\n}\n\nconst Button = ({ title, type }: { title: string; type: ButtonType }) => {\n  return (\n    <button className='bg-black px-4 py-2 text-white hover:text-[#c1c1c1]' type={type}>\n      {title}\n    </button>\n  );\n};\n\nexport default Button;\n","import Button, { ButtonType } from 'components/buttons/Button';\nimport { ChangeEvent, FormEvent, useState } from 'react';\nimport { useAppDispatch } from 'redux/store';\nimport { authLoginThunk } from 'redux/thunk/auth-thunk';\nimport { ILoginForm } from 'types/auth-types';\n\nconst LoginForm = () => {\n  const [form, setForm] = useState<ILoginForm>({ email: '', password: '' });\n  const dispatch = useAppDispatch();\n\n  const handleInput = (e: ChangeEvent) => {\n    const { name, value } = e.target as HTMLInputElement;\n    setForm((prev) => {\n      return { ...prev, [name]: value };\n    });\n  };\n\n  const onSubmit = (e: FormEvent) => {\n    e.preventDefault();\n    dispatch(authLoginThunk(form));\n    setForm({ email: '', password: '' });\n  };\n\n  return (\n    <form className='flex flex-col gap-2' onSubmit={onSubmit}>\n      <label className='flex flex-col'>\n        Email:\n        <input onChange={handleInput} name='email' type='email' value={form.email} />\n      </label>\n      <label className='flex flex-col'>\n        Password:\n        <input\n          onChange={handleInput}\n          name='password'\n          type='password'\n          minLength={7}\n          maxLength={32}\n          value={form.password}\n        />\n      </label>\n      <Button type={ButtonType.Submit} title='Login' />;\n    </form>\n  );\n};\n\nexport default LoginForm;\n","import LoginForm from 'components/forms/Login';\n\nconst LoginPage = () => {\n  return (\n    <>\n      <h2>\n        <b>Login</b>\n      </h2>\n      <LoginForm />\n    </>\n  );\n};\n\nexport default LoginPage;\n"],"names":["ButtonType","_ref","title","type","_jsx","className","children","_useState","useState","email","password","_useState2","_slicedToArray","form","setForm","dispatch","useAppDispatch","handleInput","e","target","name","value","prev","_objectSpread","_defineProperty","_jsxs","onSubmit","preventDefault","authLoginThunk","onChange","minLength","maxLength","Button","Submit","_Fragment","LoginForm"],"sourceRoot":""}