{"version":3,"file":"static/js/334.5c49af79.chunk.js","mappings":"0LAAYA,EAAU,SAAVA,GAAU,OAAVA,EAAU,gBAAVA,EAAU,gBAAVA,EAAU,cAAVA,CAAU,MActB,IARe,SAAHC,GAA8D,IAAxDC,EAAKD,EAALC,MAAOC,EAAIF,EAAJE,KACvB,OACEC,EAAAA,EAAAA,KAAA,UAAQC,UAAU,qDAAqDF,KAAMA,EAAKG,SAC/EJ,GAGP,C,wMC+CA,EAhDkB,WAChB,IAAMK,GAAOC,EAAAA,EAAAA,MACbC,GAAwBC,EAAAA,EAAAA,UAAqB,CAAEC,MAAO,GAAIC,SAAU,KAAKC,GAAAC,EAAAA,EAAAA,GAAAL,EAAA,GAAlEM,EAAIF,EAAA,GAAEG,EAAOH,EAAA,GACdI,GAAWC,EAAAA,EAAAA,MAEXC,EAAc,SAACC,GACnB,IAAAnB,EAAwBmB,EAAEC,OAAlBC,EAAIrB,EAAJqB,KAAMC,EAAKtB,EAALsB,MACdP,GAAQ,SAACQ,GACP,OAAAC,EAAAA,EAAAA,IAAAA,EAAAA,EAAAA,GAAA,GAAYD,GAAI,IAAAE,EAAAA,EAAAA,GAAA,GAAGJ,EAAOC,GAC5B,GACF,EAaA,OACEI,EAAAA,EAAAA,MAAAC,EAAAA,SAAA,CAAAtB,SAAA,CACGC,EAAKsB,YAAazB,EAAAA,EAAAA,KAAC0B,EAAAA,EAAM,KAC1BH,EAAAA,EAAAA,MAAA,QAAMtB,UAAU,sBAAsB0B,SAdzB,SAACX,GAChBA,EAAEY,iBACFf,GAASgB,EAAAA,EAAAA,IAAelB,IAAOmB,MAAK,YAClCC,EAAAA,EAAAA,MAAeD,MAAK,SAAAE,GAAgC,IAA7Bd,EAAIc,EAAJd,KAAMX,EAAKyB,EAALzB,MAAO0B,EAAQD,EAARC,SAClCpB,GAASqB,EAAAA,EAAAA,IAAQ,CAAEhB,KAAAA,EAAMX,MAAAA,EAAO0B,SAAUA,EAASE,UACnDtB,GAASuB,EAAAA,EAAAA,GAAeH,GAC1B,GACF,IACArB,EAAQ,CAAEL,MAAO,GAAIC,SAAU,IACjC,EAK6DN,SAAA,EACvDqB,EAAAA,EAAAA,MAAA,SAAOtB,UAAU,gBAAeC,SAAA,CAAC,UAE/BF,EAAAA,EAAAA,KAAA,SAAOqC,SAAUtB,EAAaG,KAAK,QAAQnB,KAAK,QAAQoB,MAAOR,EAAKJ,YAEtEgB,EAAAA,EAAAA,MAAA,SAAOtB,UAAU,gBAAeC,SAAA,CAAC,aAE/BF,EAAAA,EAAAA,KAAA,SACEqC,SAAUtB,EACVG,KAAK,WACLnB,KAAK,WACLuC,UAAW,EACXC,UAAW,GACXpB,MAAOR,EAAKH,eAGhBR,EAAAA,EAAAA,KAACwC,EAAAA,EAAM,CAACzC,KAAMH,EAAAA,EAAW6C,OAAQ3C,MAAM,UAAU,SAIzD,EC5CA,EAXkB,WAChB,OACEyB,EAAAA,EAAAA,MAAAC,EAAAA,SAAA,CAAAtB,SAAA,EACEF,EAAAA,EAAAA,KAAA,MAAAE,UACEF,EAAAA,EAAAA,KAAA,KAAAE,SAAG,aAELF,EAAAA,EAAAA,KAAC0C,EAAS,MAGhB,C","sources":["components/buttons/Button.tsx","components/forms/Login.tsx","pages/Login.tsx"],"sourcesContent":["export enum ButtonType {\n  Submit = 'submit',\n  Button = 'button',\n  Reset = 'reset',\n}\n\nconst Button = ({ title, type }: { title: string; type: ButtonType }) => {\n  return (\n    <button className='bg-black px-4 py-2 text-white hover:text-[#c1c1c1]' type={type}>\n      {title}\n    </button>\n  );\n};\n\nexport default Button;\n","import Button, { ButtonType } from 'components/buttons/Button';\nimport Loader from 'components/loader/Loader';\nimport { ChangeEvent, FormEvent, useState } from 'react';\nimport { useAuth } from 'redux/selectors';\nimport { updateContacts } from 'redux/slice/contacts-slice';\nimport { setUser } from 'redux/slice/user-slice';\nimport { useAppDispatch } from 'redux/store';\nimport { authLoginThunk } from 'redux/thunk/auth-thunk';\nimport { fetchProfile } from 'services/auth-api';\nimport { ILoginForm } from 'types/auth-types';\n\nconst LoginForm = () => {\n  const auth = useAuth();\n  const [form, setForm] = useState<ILoginForm>({ email: '', password: '' });\n  const dispatch = useAppDispatch();\n\n  const handleInput = (e: ChangeEvent) => {\n    const { name, value } = e.target as HTMLInputElement;\n    setForm((prev) => {\n      return { ...prev, [name]: value };\n    });\n  };\n\n  const onSubmit = (e: FormEvent) => {\n    e.preventDefault();\n    dispatch(authLoginThunk(form)).then(() => {\n      fetchProfile().then(({ name, email, contacts }) => {\n        dispatch(setUser({ name, email, contacts: contacts.length }));\n        dispatch(updateContacts(contacts));\n      });\n    });\n    setForm({ email: '', password: '' });\n  };\n\n  return (\n    <>\n      {auth.isLoading && <Loader />}\n      <form className='flex flex-col gap-2' onSubmit={onSubmit}>\n        <label className='flex flex-col'>\n          Email:\n          <input onChange={handleInput} name='email' type='email' value={form.email} />\n        </label>\n        <label className='flex flex-col'>\n          Password:\n          <input\n            onChange={handleInput}\n            name='password'\n            type='password'\n            minLength={7}\n            maxLength={32}\n            value={form.password}\n          />\n        </label>\n        <Button type={ButtonType.Submit} title='Login' />;\n      </form>\n    </>\n  );\n};\n\nexport default LoginForm;\n","import LoginForm from 'components/forms/Login';\n\nconst LoginPage = () => {\n  return (\n    <>\n      <h2>\n        <b>Login</b>\n      </h2>\n      <LoginForm />\n    </>\n  );\n};\n\nexport default LoginPage;\n"],"names":["ButtonType","_ref","title","type","_jsx","className","children","auth","useAuth","_useState","useState","email","password","_useState2","_slicedToArray","form","setForm","dispatch","useAppDispatch","handleInput","e","target","name","value","prev","_objectSpread","_defineProperty","_jsxs","_Fragment","isLoading","Loader","onSubmit","preventDefault","authLoginThunk","then","fetchProfile","_ref2","contacts","setUser","length","updateContacts","onChange","minLength","maxLength","Button","Submit","LoginForm"],"sourceRoot":""}